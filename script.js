import { initializeApp } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js";
import { getAuth, onAuthStateChanged, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, sendPasswordResetEmail } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js";
import { getFirestore, doc, setDoc, onSnapshot } from "https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js";

// --- CONFIGURA√á√ÉO E VARI√ÅVEIS GLOBAIS ---
const firebaseConfig = typeof __firebase_config !== 'undefined' ? JSON.parse(__firebase_config) : { apiKey: "SUA_API_KEY", authDomain: "SEU_AUTH_DOMAIN", projectId: "SEU_PROJECT_ID" };
const app = initializeApp(firebaseConfig);
const db = getFirestore(app);
const auth = getAuth(app);
const appId = typeof __app_id !== 'undefined' ? __app_id : 'plano-de-estudos-ultra';

let userId = null;
let userProgress = {};
let dailyConfig = null;
let unsubscribeProgress = null;

const disciplinasData = {
    "L√≠ngua Portuguesa": { icon: "üìö", color: "bg-blue-100", textColor: "text-blue-800", borderColor: "border-blue-400", topics: ["Interpreta√ß√£o de texto", "Ortografia oficial", "Acentua√ß√£o gr√°fica", "Pontua√ß√£o", "Classes de palavras", "Vozes verbais", "Concord√¢ncia verbal e nominal", "Reg√™ncia verbal e nominal", "Sintaxe: coordena√ß√£o e subordina√ß√£o", "Ocorr√™ncia de crase", "Sin√¥nimos e ant√¥nimos", "Sentido pr√≥prio e figurado das palavras", "Reorganiza√ß√£o de ora√ß√µes e per√≠odos", "Reda√ß√£o (reconhecimento de frases corretas)"] },
    "Racioc√≠nio L√≥gico, Mat. Financeira e Estat√≠stica": { icon: "üß†", color: "bg-indigo-100", textColor: "text-indigo-800", borderColor: "border-indigo-400", topics: ["Estrutura l√≥gica de rela√ß√µes arbitr√°rias", "Compreens√£o da l√≥gica de situa√ß√µes", "Compreens√£o do processo l√≥gico e conclus√µes", "Juros simples (Montante, Taxas, Capitais)", "Juros compostos (Montante, Taxas, Capitais)", "Descontos: simples e composto", "Sistemas de Amortiza√ß√£o (Franc√™s, SAC, Misto)", "Fluxo de caixa (Valor atual, TIR)", "Estat√≠stica descritiva e an√°lise explorat√≥ria", "Probabilidade (Defini√ß√µes, Condicional)", "Vari√°veis aleat√≥rias e distribui√ß√µes", "Esperan√ßa e vari√¢ncia de vari√°vel aleat√≥ria", "Distribui√ß√µes conjuntas, covari√¢ncia, correla√ß√£o", "No√ß√£o de amostra aleat√≥ria e distribui√ß√£o", "No√ß√µes de estima√ß√£o pontual e intervalar", "No√ß√µes de teste de hip√≥tese (n√≠vel de signific√¢ncia)"] },
    "Direito Constitucional": { icon: "‚öñÔ∏è", color: "bg-red-100", textColor: "text-red-800", borderColor: "border-red-400", topics: ["Constitui√ß√£o da Rep√∫blica de 1988", "Aplicabilidade das normas constitucionais", "Direitos e garantias fundamentais", "Organiza√ß√£o pol√≠tico-administrativa do Estado", "Administra√ß√£o P√∫blica (Disposi√ß√µes gerais)", "Poder Executivo (Atribui√ß√µes do Presidente)", "Poder Legislativo (Estrutura, Processo)", "Fiscaliza√ß√£o cont√°bil, financeira e or√ßament√°ria", "Poder Judici√°rio (Disposi√ß√µes gerais)", "Fun√ß√µes essenciais √† Justi√ßa (MP, Advocacia)", "Controle de constitucionalidade (Judicial e n√£o judicial)", "S√∫mula vinculante e Reclama√ß√£o", "Ordem econ√¥mica e financeira", "Constitui√ß√£o do Estado de Goi√°s (Poderes, Ordem Econ√¥mica)"] },
    "Direito Administrativo": { icon: "üèõÔ∏è", color: "bg-orange-100", textColor: "text-orange-800", borderColor: "border-orange-400", topics: ["Estado, Governo e Administra√ß√£o P√∫blica", "Direito Administrativo (Conceito, Objeto, Fontes)", "Ato administrativo (Requisitos, Atributos, Extin√ß√£o)", "Agentes p√∫blicos (Disposi√ß√µes constitucionais)", "Estatuto dos servidores de GO (Lei 20.756/20)", "Carreira do fisco de GO (Lei 13.266/98)", "Poderes da Administra√ß√£o P√∫blica", "Regime jur√≠dico-administrativo (Princ√≠pios)", "Responsabilidade civil do Estado", "Servi√ßos P√∫blicos (Concess√£o, Permiss√£o)", "Organiza√ß√£o Administrativa (Direta e Indireta)", "Controle da Administra√ß√£o P√∫blica", "Improbidade administrativa (Lei 8.429/92 com alt.)", "Lei Anticorrup√ß√£o (Lei 12.846/2013)", "Licita√ß√µes e Contratos (Lei 14.133/2021)", "Bens P√∫blicos (Regime jur√≠dico, Classifica√ß√£o)", "Lei de acesso √† informa√ß√£o (Lei 12.527/2011)", "Lei Geral de Prote√ß√£o de Dados (Lei 13.709/2018)"] },
    "Direito Financeiro": { icon: "üí∞", color: "bg-amber-100", textColor: "text-amber-800", borderColor: "border-amber-400", topics: ["Or√ßamento na CF/88 (PPA, LDO, LOA)", "Cr√©ditos Adicionais e Emendas parlamentares", "Lei de Responsabilidade Fiscal (LC 101/2000)", "Normas Gerais de Direito Financeiro (Lei 4.320/1964)"] },
    "Direito Civil, Penal e Empresarial": { icon: "ü§ù", color: "bg-yellow-100", textColor: "text-yellow-800", borderColor: "border-yellow-400", topics: ["LINDB", "Pessoas naturais (Personalidade, Capacidade)", "Pessoas jur√≠dicas (Associa√ß√µes, Funda√ß√µes)", "Bens (Im√≥veis, M√≥veis, P√∫blicos)", "Fato e Neg√≥cio jur√≠dico (Invalidade)", "Prescri√ß√£o e Decad√™ncia", "Obriga√ß√µes (Adimplemento, Inadimplemento)", "Contratos (Princ√≠pios, Disposi√ß√µes gerais)", "Responsabilidade civil (Objetiva e Subjetiva)", "Aplica√ß√£o da lei penal (Tempo e Espa√ßo)", "Teoria do Crime (Causalidade, Tipicidade, Culpabilidade)", "Crimes contra a F√© P√∫blica", "Crimes contra a Administra√ß√£o P√∫blica", "Crimes contra a ordem tribut√°ria (Lei 8.137/90)", "Abuso de autoridade (Lei 13.869/2019)", "Direito empresarial (Teoria da empresa)", "Registro de empresa e Empres√°rio irregular", "Direito societ√°rio (Sociedade simples e empres√°ria)", "Sociedade limitada e Sociedade an√¥nima", "Opera√ß√µes societ√°rias (Fus√£o, Cis√£o, Incorpora√ß√£o)", "Fal√™ncia e recupera√ß√£o judicial e extrajudicial"] },
    "Economia": { icon: "üìà", color: "bg-lime-100", textColor: "text-lime-800", borderColor: "border-lime-400", topics: ["Conceitos fundamentais de economia", "Teoria elementar de equil√≠brio do mercado", "Fatores de oferta e procura", "Efeitos de deslocamentos das curvas", "Elasticidades-pre√ßo da procura e da oferta", "Equil√≠brio da firma em diferentes mercados", "A necessidade econ√¥mica da tributa√ß√£o", "Classifica√ß√£o dos impostos", "Tributa√ß√£o e efici√™ncia (Peso Morto)", "Tributa√ß√£o √ìtima (Regra de Ramsey)", "Curva de Laffer", "Tributa√ß√£o e equidade (Trade-off)", "Incid√™ncia econ√¥mica dos tributos", "Tributa√ß√£o em concorr√™ncia perfeita e monop√≥lio", "Pol√≠tica tribut√°ria e decis√µes de consumo", "Macroeconomia: Fluxo Circular da Renda", "Agregados macroecon√¥micos (PIB, Consumo)", "Determina√ß√£o do produto de equil√≠brio (Curva IS)", "Pol√≠tica monet√°ria (Curva LM)", "PIB real vs. PIB nominal", "Infla√ß√£o: conceitos e mensura√ß√£o", "Contas nacionais do Brasil", "Balan√ßo de Pagamentos", "No√ß√µes sobre economia do setor p√∫blico", "Pol√≠ticas fiscal, monet√°ria e cambial", "Efeitos da atua√ß√£o do Estado na economia", "Sistema Tribut√°rio como instrumento de distribui√ß√£o"] },
    "Contabilidade Geral": { icon: "üßæ", color: "bg-green-100", textColor: "text-green-800", borderColor: "border-green-400", topics: ["Conceito, objeto e objetivos da Contabilidade", "Princ√≠pios e Normas Brasileiras de Contabilidade", "Itens patrimoniais: Ativo, Passivo e PL", "Classifica√ß√£o e avalia√ß√£o de itens patrimoniais", "Regime de Compet√™ncia e Apura√ß√£o do resultado", "Estoques: Tipos, Crit√©rios e M√©todos de avalia√ß√£o", "Ativo Imobilizado: Mensura√ß√£o e Deprecia√ß√£o", "Ativo Intang√≠vel: Mensura√ß√£o e Amortiza√ß√£o", "Redu√ß√£o ao valor recuper√°vel (Impairment)", "Estimativa de perdas e Provis√µes (Conting√™ncias)", "Balan√ßo Patrimonial (Estrutura)", "Demonstra√ß√£o do Resultado do Exerc√≠cio (DRE)", "DMPL e DLPA"] },
    "Realidade de Goi√°s": { icon: "üó∫Ô∏è", color: "bg-emerald-100", textColor: "text-emerald-800", borderColor: "border-emerald-400", topics: ["Forma√ß√£o econ√¥mica de Goi√°s (minera√ß√£o, agropecu√°ria)", "Moderniza√ß√£o da economia goiana (Estrada de Ferro, Goi√¢nia, Bras√≠lia)", "Moderniza√ß√£o da agricultura e urbaniza√ß√£o", "Popula√ß√£o goiana: movimentos migrat√≥rios", "Economia goiana: industrializa√ß√£o e infraestrutura", "Regi√µes goianas e desigualdades regionais", "Aspectos f√≠sicos do territ√≥rio goiano", "Hist√≥ria pol√≠tica de Goi√°s", "Hist√≥ria social de Goi√°s", "Atualidades econ√¥micas, pol√≠ticas e sociais"] },
    "Tecnologias da Informa√ß√£o": { icon: "üíª", color: "bg-teal-100", textColor: "text-teal-800", borderColor: "border-teal-400", topics: ["Fundamentos de Banco de Dados (SQL, T-SQL, PL/SQL)", "Modelagem de dados: relacional e multidimensional", "Administra√ß√£o de banco de dados relacionais", "Pipeline de Dados (ETL, ELT)", "OLAP: Conceitos e aplica√ß√µes", "Modelagem e Otimiza√ß√£o de Bases Multidimensionais", "Pr√©-processamento de Dados", "Data Lake: Conceito e aplica√ß√µes", "Data Mining e Data Warehouse", "Big Data: Conceitos e premissas", "Bancos de Dados N√£o Relacionais (NoSQL)", "Gerenciamento de Projetos (PMBOK 7¬™ edi√ß√£o)", "Metodologias √Ågeis (Scrum, Kanban, Lean, XP)", "An√°lise de Agrupamentos (Clusteriza√ß√£o)", "An√°lise Fatorial por Componentes Principais", "An√°lise de Correspond√™ncia (Simples e M√∫ltipla)", "Modelos Lineares de Regress√£o", "Modelos de Regress√£o Log√≠stica", "Modelos de Regress√£o para Dados de Contagem", "Redes Neurais Artificiais e Machine Learning", "Visualiza√ß√£o e An√°lise Explorat√≥ria de Dados", "Business Intelligence ( dashboards, Power BI)", "S√©ries Temporais (Sazonalidade, Tend√™ncia, ARIMA)"] },
    "Auditoria": { icon: "üîç", color: "bg-cyan-100", textColor: "text-cyan-800", borderColor: "border-cyan-400", topics: ["Planejamento de Auditoria", "Amostragem em Auditoria", "Testes de observ√¢ncia (ou de controles)", "Testes substantivos", "Testes para subavalia√ß√£o e superavalia√ß√£o", "Evid√™ncias de auditoria e Procedimentos", "Identifica√ß√£o de fraudes na escrita cont√°bil", "Auditoria no ativo circulante", "Recomposi√ß√£o cont√°bil do fluxo de caixa", "Auditoria nas contas de resultado", "Irregularidades (Oculta√ß√£o de ativos, Saldo credor de caixa)", "Suprimento de caixa sem comprova√ß√£o", "Aquisi√ß√µes n√£o contabilizadas", "Falta de registro de passivos", "Superavalia√ß√£o de custos", "Estrutura da EFD ICMS/IPI e XML da NF-e", "Relacionamento entre registros (EFD e NF-e)", "Normas Brasileiras de Auditoria (NBC TA e NBC PA)"] },
    "Contabilidade Avan√ßada e de Custos": { icon: "üìä", color: "bg-sky-100", textColor: "text-sky-800", borderColor: "border-sky-400", topics: ["Pol√≠ticas Cont√°beis, Mudan√ßa de Estimativa e Retifica√ß√£o de Erro", "Mensura√ß√£o a Valor Justo", "Ajuste a Valor Presente", "Instrumentos financeiros", "Propriedade para Investimento", "Opera√ß√µes de arrendamento mercantil", "Participa√ß√µes Societ√°rias (Coligadas, Controladas, MEP)", "Reorganiza√ß√£o de empresas (Incorpora√ß√£o, fus√£o, cis√£o)", "Mais valia, Goodwill e Des√°gio", "Subven√ß√£o e Assist√™ncia governamentais", "Convers√£o de demonstra√ß√µes cont√°beis (C√¢mbio)", "Demonstra√ß√£o dos Fluxos de Caixa (DFC)", "Demonstra√ß√£o do Valor Adicionado (DVA)", "Conceitos e terminologia de Custos", "Classifica√ß√£o e apropria√ß√£o dos custos", "Departamentaliza√ß√£o", "Sistemas de Custeio (Absor√ß√£o, Vari√°vel, ABC)", "Produ√ß√£o (Ordem, Cont√≠nua, Conjunta)", "Custos Estimados e Custo Padr√£o", "An√°lise Custo x Volume x Lucro (Ponto de Equil√≠brio)", "Margem de Contribui√ß√£o e Alavancagem Operacional"] },
    "Direito Tribut√°rio I": { icon: "‚öñÔ∏è", color: "bg-purple-100", textColor: "text-purple-800", borderColor: "border-purple-400", topics: ["Sistema Tribut√°rio Nacional na CF", "Princ√≠pios constitucionais tribut√°rios", "Esp√©cies tribut√°rias", "Limita√ß√µes ao Poder de Tributar (Imunidades)", "Impostos da Uni√£o", "Impostos dos Estados e DF", "Impostos dos Munic√≠pios", "Reparti√ß√£o das Receitas Tribut√°rias", "CTN: Compet√™ncia e Legisla√ß√£o Tribut√°ria", "Obriga√ß√£o Tribut√°ria: Fato Gerador e Sujeitos", "Responsabilidade Tribut√°ria (Sucessores, Terceiros)", "Cr√©dito Tribut√°rio: Lan√ßamento", "Suspens√£o da exigibilidade do Cr√©dito", "Extin√ß√£o do Cr√©dito Tribut√°rio", "Exclus√£o do Cr√©dito (Isen√ß√£o, Anistia)", "Garantias e Privil√©gios do Cr√©dito", "Administra√ß√£o Tribut√°ria (Fiscaliza√ß√£o, D√≠vida Ativa)", "LC 24/1975 (Conv√™nios ICMS)", "LC 87/1996 (Lei Kandir)", "LC 105/2001 (Sigilo Banc√°rio)", "LC 116/2003 (ISS)", "LC 123/2006 (Simples Nacional)", "LC 192/2022 (ICMS Combust√≠veis)", "S√∫mulas Vinculantes do STF em mat√©ria tribut√°ria"] },
    "Direito Tribut√°rio II - Reforma Tribut√°ria": { icon: "üìú", color: "bg-fuchsia-100", textColor: "text-fuchsia-800", borderColor: "border-fuchsia-400", topics: ["EC 132/2023 - Vis√£o Geral", "LC 214/2025: Normas Gerais do IBS e da CBS", "Fato Gerador, Base de C√°lculo e Al√≠quotas IBS/CBS", "N√£o cumulatividade e sistema de cr√©ditos", "Operacionaliza√ß√£o (Split Payment)", "IBS/CBS sobre Importa√ß√µes e Exporta√ß√µes", "Desonera√ß√£o da aquisi√ß√£o de bens de capital", "Devolu√ß√£o Personalizada (Cashback)", "Cesta B√°sica Nacional de Alimentos", "Regimes Diferenciados (Redu√ß√µes 30%, 60%, Isen√ß√£o)", "Regimes Diferenciados (Produtor Rural, Transportador)", "Regimes Espec√≠ficos: Combust√≠veis", "Regimes Espec√≠ficos: Servi√ßos Financeiros e Planos de Sa√∫de", "Regimes Espec√≠ficos: Bens Im√≥veis e Cooperativas", "Administra√ß√£o do IBS e Comit√™ Gestor"] },
    "Legisla√ß√£o Tribut√°ria Estadual": { icon: "üá¨üá¥", color: "bg-pink-100", textColor: "text-pink-800", borderColor: "border-pink-400", topics: ["C√≥digo Tribut√°rio de Goi√°s (Lei 11.651/91)", "Regulamento do CTE (Decreto 4.852/97)", "Processo Administrativo Tribut√°rio (Lei 16.469/09)", "Substitui√ß√£o Tribut√°ria (Anexo VIII do RCTE)", "Benef√≠cios Fiscais (Anexo IX do RCTE)", "Obriga√ß√µes Acess√≥rias (Anexo XII do RCTE)", "DIFAL a n√£o contribuinte (Anexo XV do RCTE)", "Informa√ß√µes de Meios de Pagamento (Anexo XVIII)", "Ajuste SINIEF 07/05 (NF-e)", "Ajuste SINIEF 19/16 (NFC-e)", "Ajuste SINIEF 21/10 (MDF-e)", "ProGoi√°s (Lei 20.787/2020)", "FUNDEINFRA (Lei 21.670/22)", "Autorregulariza√ß√£o (IN 199/2022-SRE)", "C√≥digo de Direitos do Contribuinte (LC 104/13)", "FOMENTAR (Lei 9.489/84)", "Altera√ß√µes FOMENTAR (Lei 11.180/90)", "PRODUZIR e FUNPRODUZIR (Lei 13.591/2000)"] }
};

const authModal = document.getElementById('authModal');
const authContent = document.getElementById('authContent');
const configModal = document.getElementById('configModal');
const mainApp = document.getElementById('mainApp');
const authFeedback = document.getElementById('auth-feedback');

// --- AUTENTICA√á√ÉO E DADOS ---

onAuthStateChanged(auth, (user) => {
    if (user) {
        userId = user.uid;
        document.getElementById('user-email').textContent = user.email;
        document.getElementById('user-email').classList.remove('hidden');
        hideAuthModal();
        loadAndListenForProgress(userId);
    } else {
        userId = null;
        if(unsubscribeProgress) unsubscribeProgress();
        userProgress = {};
        dailyConfig = null;
        mainApp.classList.add('hidden');
        document.getElementById('user-email').classList.add('hidden');
        showAuthModal();
    }
});

const loadAndListenForProgress = (uid) => {
    if (!uid) return;
    if (unsubscribeProgress) unsubscribeProgress();
    const progressRef = doc(db, 'artifacts', appId, 'users', uid);
    unsubscribeProgress = onSnapshot(progressRef, async (docSnap) => {
        if (docSnap.exists() && docSnap.data().progress) {
            userProgress = docSnap.data().progress;
        } else {
            const initialProgress = {};
            Object.keys(disciplinasData).forEach(d => initialProgress[d] = 0);
            await setDoc(progressRef, { progress: initialProgress });
            userProgress = initialProgress;
        }
        renderGeneralProgress();
        initializeAppState();
    }, error => console.error("Erro ao ouvir progresso:", error));
};

const saveProgress = async (newProgress) => {
    if (!userId) return;
    const progressRef = doc(db, 'artifacts', appId, 'users', userId);
    try { await setDoc(progressRef, { progress: newProgress }, { merge: true }); }
    catch (error) { console.error("Erro ao salvar progresso:", error); }
};

// --- ESTADO DA APLICA√á√ÉO E UI ---

const initializeAppState = () => { loadDailyConfig(); if (dailyConfig && dailyConfig.plan) { showMainApp(); } else { showConfigModal(); } };
const showAuthModal = () => { switchAuthForm('login-form'); authModal.classList.remove('hidden'); authModal.classList.add('flex'); setTimeout(() => authContent.classList.remove('scale-95', 'opacity-0'), 50); };
const hideAuthModal = () => { authContent.classList.add('scale-95', 'opacity-0'); setTimeout(() => { authModal.classList.add('hidden'); authModal.classList.remove('flex'); }, 200); };
const showConfigModal = () => { setupModal(); mainApp.classList.add('hidden'); configModal.classList.remove('hidden'); configModal.classList.add('flex'); setTimeout(() => document.getElementById('modalContent').classList.remove('scale-95', 'opacity-0'), 50); };
const hideConfigModal = () => { const modalContent = document.getElementById('modalContent'); modalContent.classList.add('scale-95', 'opacity-0'); setTimeout(() => { configModal.classList.add('hidden'); configModal.classList.remove('flex'); }, 200); };
const setupModal = () => { const now = new Date(); const hour = now.getHours(); let greetingText = (hour < 12) ? "Bom dia" : (hour < 18) ? "Boa tarde" : "Boa noite"; document.getElementById('greeting').innerHTML = `${greetingText}, futuro(a) Auditor(a)!`; document.getElementById('currentDate').textContent = `Hoje √© ${now.toLocaleDateString('pt-BR', { day: '2-digit', month: 'long', year: 'numeric' })}`; const postos = ['02', '03', '04', '06', '07', '08', '09']; document.getElementById('postosGrid').innerHTML = postos.map(p => `<div class="custom-checkbox"><input type="checkbox" id="posto-${p}" name="posto" value="${p}" class="posto-checkbox"><label for="posto-${p}" class="block p-2 sm:p-3 rounded-lg cursor-pointer font-bold text-base sm:text-lg">${p}</label></div>`).join(''); document.querySelectorAll('input[name="turno"], .posto-checkbox, #desativar3e4').forEach(el => el.addEventListener('change', validateConfig)); document.getElementById('desativar3e4').addEventListener('change', e => { const checked = e.target.checked; document.getElementById('posto-03').checked = checked; document.getElementById('posto-04').checked = checked; validateConfig(); }); document.getElementById('iniciarEstudosBtn').onclick = handleStartStudies; };
const validateConfig = () => { const turnoSelecionado = document.querySelector('input[name="turno"]:checked'); const postosSelecionados = document.querySelectorAll('.posto-checkbox:checked').length; document.getElementById('iniciarEstudosBtn').disabled = !(turnoSelecionado && postosSelecionados > 0); };
const handleStartStudies = () => { const turno = document.querySelector('input[name="turno"]:checked').value; const postosAtivos = Array.from(document.querySelectorAll('.posto-checkbox:checked')).map(cb => cb.value); const plan = generateStudyPlan(turno, postosAtivos); dailyConfig = { date: new Date().toLocaleDateString('pt-BR'), turno, postosAtivos, plan }; localStorage.setItem(`dailyConfig_${userId}`, JSON.stringify(dailyConfig)); showMainApp(); };
const loadDailyConfig = () => { if(!userId) return; const savedConfig = localStorage.getItem(`dailyConfig_${userId}`); if (savedConfig) { const parsedConfig = JSON.parse(savedConfig); if (parsedConfig.date === new Date().toLocaleDateString('pt-BR')) { dailyConfig = parsedConfig; } else { localStorage.removeItem(`dailyConfig_${userId}`); dailyConfig = null; } } };
const showMainApp = () => { hideConfigModal(); renderStudySessions(dailyConfig.plan); mainApp.classList.remove('hidden'); document.getElementById('headerDate').textContent = new Date().toLocaleDateString('pt-BR', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }); };

// --- RENDERIZA√á√ÉO E L√ìGICA DE ESTUDO ---
const generateStudyPlan = (turno, postosAtivos) => { const horarios = []; let startHour = turno === 'primeiro' ? 8 : 11; for (let i = 0; i < postosAtivos.length; i++) { const endHour = (startHour + 3) % 24; horarios.push(`${String(startHour).padStart(2, '0')}:00 - ${String(endHour).padStart(2, '0')}:00`); startHour = (endHour + 3) % 24; } let plan = []; let tempProgress = { ...userProgress }; for (let i = 0; i < postosAtivos.length; i++) { let availableDisciplines = Object.keys(disciplinasData).filter(name => (tempProgress[name] || 0) < disciplinasData[name].topics.length).map(name => ({ name, progress: tempProgress[name] || 0 })).sort((a, b) => a.progress - b.progress || Math.random() - 0.5); if (availableDisciplines.length === 0) break; const disciplinaName = availableDisciplines[0].name; const disciplina = disciplinasData[disciplinaName]; const currentTopicIndex = tempProgress[disciplinaName] || 0; const topicText = `${currentTopicIndex + 1}. ${disciplina.topics[currentTopicIndex]}`; plan.push({ posto: postosAtivos[i], horario: horarios[i], disciplina: disciplinaName, topico: topicText, topicIndex: currentTopicIndex, ...disciplinasData[disciplinaName] }); tempProgress[disciplinaName] = currentTopicIndex + 1; } return plan; };
const renderStudySessions = (plan) => { const sessoesContainer = document.getElementById('sessoesContainer'); if (!plan || plan.length === 0) { sessoesContainer.innerHTML = `<div class="bg-white/70 backdrop-blur-sm p-6 rounded-lg shadow-md text-center text-gray-500"><p>Nenhuma sess√£o de estudo para hoje. Configure seu dia ou parab√©ns por ter conclu√≠do tudo!</p></div>`; return; } sessoesContainer.innerHTML = plan.map((sessao) => { const isCompleted = userProgress[sessao.disciplina] > sessao.topicIndex; const completedClass = isCompleted ? 'session-completed' : ''; const buttonHtml = isCompleted ? `<div class="flex items-center justify-end gap-2"><span class="text-green-500 font-bold flex items-center gap-1">‚úîÔ∏è Conclu√≠do</span><button class="undo-btn bg-gray-400 text-white px-3 py-1 text-xs rounded-md hover:bg-gray-500 transition-all" data-disciplina="${sessao.disciplina}" data-topic-index="${sessao.topicIndex}">Desfazer</button></div>` : `<button class="complete-btn bg-green-500 text-white px-3 py-1 text-sm rounded-md hover:bg-green-600 transition-all" data-disciplina="${sessao.disciplina}" data-topic-index="${sessao.topicIndex}">Concluir T√≥pico</button>`; return `<div class="sessao-card border-l-4 p-4 rounded-r-lg shadow-lg transition-all ${sessao.color} ${sessao.borderColor} ${completedClass}"><div class="flex items-start space-x-3 sm:space-x-4"><div class="text-2xl pt-1">${sessao.icon}</div><div class="flex-1"><div class="flex flex-wrap items-center justify-between gap-2"><span class="font-bold ${sessao.textColor} text-base sm:text-lg">${sessao.disciplina}</span><span class="text-xs sm:text-sm font-semibold bg-white/60 px-2 py-1 rounded-full whitespace-nowrap text-gray-700">Posto ${sessao.posto} | ${sessao.horario}</span></div><p class="mt-1 text-gray-600 text-sm sm:text-base">${sessao.topico}</p><div class="mt-3 text-right"> ${buttonHtml} </div></div></div></div>`; }).join(''); highlightCurrentSession(); };
const handleCompleteTopic = (e) => { const { disciplina, topicIndex } = e.target.dataset; const topicIndexInt = parseInt(topicIndex, 10); if (userProgress[disciplina] === topicIndexInt) { const newProgress = { ...userProgress }; newProgress[disciplina]++; saveProgress(newProgress); } };
const handleUndoTopic = (e) => { const { disciplina, topicIndex } = e.target.dataset; const topicIndexInt = parseInt(topicIndex, 10); if (userProgress[disciplina] === topicIndexInt + 1) { const newProgress = { ...userProgress }; newProgress[disciplina]--; saveProgress(newProgress); }};
const highlightCurrentSession = () => { document.querySelectorAll('.current-session-highlight').forEach(el => el.classList.remove('current-session-highlight')); const now = new Date(); const currentTime = now.getHours() * 60 + now.getMinutes(); let nextSessionEl = null; let foundCurrent = false; if (dailyConfig && dailyConfig.plan) { for (const sessao of dailyConfig.plan) { const [start] = sessao.horario.split(' - '); const [startHour] = start.split(':').map(Number); const sessionStart = startHour * 60; const sessionEnd = sessionStart + (3 * 60); const sessionEl = Array.from(document.querySelectorAll('.sessao-card')).find(el => el.querySelector('p').textContent.includes(sessao.topico)); if (!sessionEl) continue; if (currentTime >= sessionStart && currentTime < sessionEnd) { sessionEl.classList.add('current-session-highlight'); sessionEl.scrollIntoView({ behavior: 'smooth', block: 'center' }); foundCurrent = true; break; } else if (currentTime < sessionStart && !nextSessionEl) { nextSessionEl = sessionEl; } } if (!foundCurrent && nextSessionEl) { nextSessionEl.classList.add('current-session-highlight'); nextSessionEl.scrollIntoView({ behavior: 'smooth', block: 'center' }); } } setTimeout(highlightCurrentSession, 60000); };
const renderGeneralProgress = () => { const container = document.getElementById('progressoContainer'); let totalTopics = 0; let completedTopics = 0; const disciplinesHTML = Object.entries(disciplinasData).map(([name, data]) => { const total = data.topics.length; const completed = userProgress[name] || 0; const percentage = total > 0 ? Math.round((completed / total) * 100) : 0; totalTopics += total; completedTopics += completed; return `<div class="accordion-item bg-white/70 backdrop-blur-sm rounded-lg shadow-md overflow-hidden"><div class="accordion-header flex justify-between items-center p-3 cursor-pointer" data-target="#content-${name.replace(/[^a-zA-Z0-9]/g, '')}"><div class="flex items-center space-x-3"><span class="text-lg">${data.icon}</span><span class="font-semibold text-sm text-slate-700 flex-1">${name}</span></div><div class="flex items-center space-x-2"><span class="text-xs font-bold ${data.textColor}">${percentage}%</span><svg class="arrow-icon h-5 w-5 text-slate-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" /></svg></div></div><div class="progress-bar h-1.5 ${data.color} w-full"><div class="progress-bar-inner h-full ${data.color.replace('100', '500')}" style="width: ${percentage}%;"></div></div><div id="content-${name.replace(/[^a-zA-Z0-9]/g, '')}" class="accordion-content"><ul class="text-xs text-slate-600 space-y-1 py-2">${data.topics.map((topic, index) => `<li class="flex items-start gap-2 ${index < completed ? 'line-through text-slate-400' : ''}"><span class="mt-0.5">${index < completed ? '‚úÖ' : '‚ñ™Ô∏è'}</span><span>${index + 1}. ${topic}</span></li>`).join('')}</ul></div></div>`; }).join(''); const totalPercentage = totalTopics > 0 ? Math.round((completedTopics / totalTopics) * 100) : 0; const summaryHTML = `<div class="bg-gradient-to-br from-sky-500 to-blue-600 text-white p-6 rounded-xl shadow-xl text-center"><h3 class="text-lg font-bold">Progresso Total</h3><div class="text-5xl font-extrabold my-2">${totalPercentage}%</div><p class="text-sm opacity-90">${completedTopics} de ${totalTopics} t√≥picos conclu√≠dos.</p></div>`; container.innerHTML = summaryHTML + disciplinesHTML; };

// --- L√ìGICA DE AUTENTICA√á√ÉO ---
const setFeedback = (message, type) => { authFeedback.textContent = message; authFeedback.className = `text-sm mt-4 h-4 ${type === 'error' ? 'text-red-500' : 'text-green-500'}`; };
const handleLogin = () => { const email = document.getElementById('login-email').value; const password = document.getElementById('login-password').value; setFeedback('Entrando...', 'info'); signInWithEmailAndPassword(auth, email, password).catch(error => setFeedback(error.code === 'auth/invalid-credential' ? 'E-mail ou senha inv√°lidos.' : 'Erro ao fazer login.', 'error')); };
const handleSignup = () => { const email = document.getElementById('signup-email').value; const password = document.getElementById('signup-password').value; if(password.length < 6) { setFeedback('A senha deve ter no m√≠nimo 6 caracteres.', 'error'); return; } setFeedback('Criando conta...', 'info'); createUserWithEmailAndPassword(auth, email, password).catch(error => setFeedback(error.code === 'auth/email-already-in-use' ? 'Este e-mail j√° est√° em uso.' : 'Erro ao criar conta.', 'error')); };
const handlePasswordReset = () => { const email = document.getElementById('reset-email').value; if(!email) { setFeedback('Por favor, insira seu e-mail.', 'error'); return; } setFeedback('Enviando e-mail...', 'info'); sendPasswordResetEmail(auth, email).then(() => setFeedback('E-mail de recupera√ß√£o enviado!', 'success')).catch(error => setFeedback('Erro ao enviar e-mail.', 'error')); };
const handleLogout = () => { signOut(auth).catch(error => console.error("Erro ao sair:", error)); };
const switchAuthForm = (formId) => { document.querySelectorAll('.auth-form').forEach(form => form.classList.remove('active')); document.getElementById(formId).classList.add('active'); setFeedback('', 'info'); };
const togglePasswordVisibility = (btn) => { const input = btn.previousElementSibling; const eyeOpen = btn.querySelector('.eye-open'); const eyeClosed = btn.querySelector('.eye-closed'); if(input.type === 'password') { input.type = 'text'; eyeOpen.classList.add('hidden'); eyeClosed.classList.remove('hidden'); } else { input.type = 'password'; eyeOpen.classList.remove('hidden'); eyeClosed.classList.add('hidden'); } };

// --- EVENT LISTENERS ---
document.addEventListener('DOMContentLoaded', () => {
    // Troca de formul√°rio de autentica√ß√£o
    document.getElementById('show-signup').addEventListener('click', (e) => { e.preventDefault(); switchAuthForm('signup-form'); });
    document.getElementById('show-login-from-signup').addEventListener('click', (e) => { e.preventDefault(); switchAuthForm('login-form'); });
    document.getElementById('show-forgot-password').addEventListener('click', (e) => { e.preventDefault(); switchAuthForm('forgot-password-form'); });
    document.getElementById('back-to-login').addEventListener('click', (e) => { e.preventDefault(); switchAuthForm('login-form'); });

    // A√ß√µes de autentica√ß√£o
    document.getElementById('login-btn').addEventListener('click', handleLogin);
    document.getElementById('signup-btn').addEventListener('click', handleSignup);
    document.getElementById('reset-password-btn').addEventListener('click', handlePasswordReset);
    document.getElementById('logout-btn').addEventListener('click', handleLogout);

    // Alternar visibilidade da senha
    document.querySelectorAll('.toggle-password').forEach(btn => btn.addEventListener('click', () => togglePasswordVisibility(btn)));
    
    // A√ß√µes do aplicativo
    document.getElementById('reconfigurarDiaBtn').addEventListener('click', () => { localStorage.removeItem(`dailyConfig_${userId}`); dailyConfig = null; showConfigModal(); });
    document.getElementById('sessoesContainer').addEventListener('click', (e) => { if (e.target.classList.contains('complete-btn')) handleCompleteTopic(e); else if (e.target.classList.contains('undo-btn')) handleUndoTopic(e); });
    document.getElementById('progressoContainer').addEventListener('click', (e) => {
        const header = e.target.closest('.accordion-header');
        if (header) {
            const content = document.querySelector(header.dataset.target);
            if (content) {
                header.classList.toggle('open');
                content.classList.toggle('open');
            }
        }
    });
});

